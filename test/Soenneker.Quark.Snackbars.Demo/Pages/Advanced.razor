@page "/advanced"

<h1>Advanced Snackbar Examples</h1>
<p class="lead">Complex snackbar layouts with headers, bodies, and footers.</p>

<SnackbarStack @ref="_snackbarStack" Position="SnackbarLocation.TopEnd" DefaultDelay="8000">
</SnackbarStack>

<div class="row">
    <div class="col-12">
        <h2>Complex Content Examples</h2>
        <p>Snackbars with structured content using SnackbarHeader, SnackbarBody, and SnackbarFooter:</p>
        
        <div class="d-flex flex-wrap gap-2 mb-4">
            <Button Color="Color.Success" OnClick="@ShowSuccessWithHeader">
                Success with Header
            </Button>
            <Button Color="Color.Info" OnClick="@ShowInfoWithFooter">
                Info with Footer
            </Button>
            <Button Color="Color.Warning" OnClick="@ShowCompleteLayout">
                Complete Layout
            </Button>
        </div>

        <h3>Usage</h3>
        <p>Use the <code>Push</code> method with a <code>RenderFragment</code> to create complex snackbars with structured content.</p>
    </div>
</div>

@code {
    private SnackbarStack? _snackbarStack;

    private async Task ShowSuccessWithHeader()
    {
        if (_snackbarStack != null)
        {
            await _snackbarStack.Push(@<div>
                <SnackbarHeader>
                    <strong>Success!</strong>
                </SnackbarHeader>
                <SnackbarBody>
                    Your operation completed successfully.
                </SnackbarBody>
            </div>, Color.Success);
        }
    }

    private async Task ShowInfoWithFooter()
    {
        if (_snackbarStack != null)
        {
            await _snackbarStack.Push(@<div>
                <SnackbarBody>
                    This snackbar has a footer with additional information.
                </SnackbarBody>
                <SnackbarFooter>
                    <small class="text-muted">@DateTime.Now.ToString("HH:mm:ss")</small>
                </SnackbarFooter>
            </div>, Color.Info);
        }
    }

    private async Task ShowCompleteLayout()
    {
        if (_snackbarStack != null)
        {
            await _snackbarStack.Push(@<div>
                <SnackbarHeader>
                    <strong>Complete Example</strong>
                </SnackbarHeader>
                <SnackbarBody>
                    This snackbar demonstrates all three components working together.
                </SnackbarBody>
                <SnackbarFooter>
                    <small class="text-muted">Header + Body + Footer</small>
                </SnackbarFooter>
            </div>, Color.Warning);
        }
    }
}